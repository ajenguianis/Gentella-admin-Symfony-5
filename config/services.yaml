# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app_locales: en|fr
    sf.user.class: App\Services\UserService
    # Entities Class
    sf.entity.user.class: App\Entity\User
    sf.role.class: App\Services\RoleService
    # Entities Class
    sf.entity.role.class: App\Entity\Role
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDir: '%kernel.project_dir%'
            $uploadPath: '%kernel.project_dir%/public/images'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    App\EventSubscriber\RedirectToLocaleSubscriber:
        arguments: ['@router', '%app_locales%', '%locale%']
    sf.user:
        public: true
        class: "%sf.user.class%"
        calls:
            - setEntityManager: [ "@doctrine.orm.entity_manager" ]
            - getRepository: ["%sf.entity.user.class%" ]
            - setLogger: ['@logger']
            - setContainer: ["@service_container"  ]
    sf.role:
        public: true
        class: "%sf.role.class%"
        calls:
            - setEntityManager: [ "@doctrine.orm.entity_manager" ]
            - getRepository: ["%sf.entity.role.class%" ]
            - setLogger: ['@logger']
            - setContainer: ["@service_container"  ]